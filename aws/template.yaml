AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: GeniusHome

Globals:
  Function:
    Runtime: python3.10
    Timeout: 10

Resources:
  # SSM
  TelegramBotToken:
    Type: AWS::SSM::Parameter
    Properties:
      Name: TELEGRAM_BOT_TOKEN
      Type: String
      Value: PLACEHOLDER

  # DynamoDB
  Subscribers:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Subscribers
      PrimaryKey:
        Name: chat_id
        Type: String

  Developers:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Developers
      PrimaryKey:
        Name: chat_id
        Type: String

  SensorReadings:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: SensorReadings
      PrimaryKey:
        Name: time
        Type: Number # yyyymmddhhmmss

  # Lambda
  HandleCommand:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HandleCommand
      CodeUri: lambda_functions/
      Handler: handle_command.lambda_handler
      FunctionUrlConfig:
        AuthType: NONE
      Policies:
        # parameter store
        - Statement:
            Effect: Allow
            Action: ssm:GetParameter
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/TELEGRAM_BOT_TOKEN"
        # dynamodb
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
            Resource:
              - !GetAtt Subscribers.Arn
              - !GetAtt Developers.Arn

  HandleMCU:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HandleMCU
      CodeUri: lambda_functions/
      Handler: handle_mcu.lambda_handler
      FunctionUrlConfig:
        AuthType: NONE
      Policies:
        # parameter store
        - Statement:
            Effect: Allow
            Action: ssm:GetParameter
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/TELEGRAM_BOT_TOKEN"
        # dynamodb
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:Scan
              - dynamodb:PutItem
            Resource:
              - !GetAtt Subscribers.Arn
              - !GetAtt Developers.Arn
              - !GetAtt SensorReadings.Arn

  # CloudWatch
  HandleCommandLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/HandleCommand
      RetentionInDays: 7

  HandleMCULogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/HandleMCU
      RetentionInDays: 7
